package com.challenge.keeggo.resource;

import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.test.context.ActiveProfiles;

import com.challenge.keeggo.dto.CustomerDTO;
import com.challenge.keeggo.entity.Address;
import com.challenge.keeggo.service.CustomerService;

@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
@ActiveProfiles("test")
public class CustomerResourceTest {

	@Autowired
	private TestRestTemplate testRestTemplate;
	
	@MockBean 
	CustomerService service;
	
	@Test
	public void mustSaveACustomer() throws Exception {
		
		//Scenery
		Address address = Address.builder()
				.id(1l)
				.street("Rua Teste")
				.number("10")
				.complement("02")
				.neighborhood("Vila Centro")
				.city("Campinas")
				.state("SÃ£o Paulo").build();
		
		CustomerDTO customer = CustomerDTO.builder()
				.id(1l)
				.email("paulo@hotmail.com")
				.password("123456")
				.name("Paulo")
				.cpf("848484856")
				.address(address)
				.build();
	
		HttpEntity<CustomerDTO> request = new HttpEntity<CustomerDTO>(customer);

		ResponseEntity<CustomerDTO> resposta = testRestTemplate
				.exchange("/customers", HttpMethod.POST, request, CustomerDTO.class);

		assertEquals(HttpStatus.CREATED, resposta.getStatusCode());
				
	}
}
